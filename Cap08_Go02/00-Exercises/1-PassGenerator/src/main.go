/*
Exercicio 01 - Crie um gerador de senhas em Go. Seu algorítmo deve solicitar ao usuário quantos
caractéres deve ter a senha e então gerar a senha de forma randômica usando caracteres e números.

ps.: Para criar o arquivo go.mod, para poder debugar o código em VScode, utilize: go mod init <nome da pasta onde está o arquivo go>


Exercise 01 - Create a password generator in Go. Your algorithm should prompt the user for how many
characters a password should have, and then generate a random password using characters and numbers.
*/

/*
//my solution
package main

import (
	"crypto/rand"
	"math/big"
	"fmt"
)

func main() {
	var passwordLength int
	fmt.Print("How many characters should the password have ? ")
	fmt.Scanln(&passwordLength)

	const letters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
	var password string

	for i := 0; i < passwordLength; i++ {
		num, _ := rand.Int(rand.Reader, big.NewInt(int64(len(letters))))
		password += string(letters[num.Int64()])
	}

	fmt.Println("generated password: ", password)
}
*/

// teacher's solution
package main

import (
	crand "crypto/rand"
	"fmt"
	"io"
	"math/rand"
	"time"
)

func generatePassword(minLength int, maxLength int) string {
	var chars = []byte("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-_+={}[]|:;'<>,.?/")
	var length = rand.Intn(maxLength-minLength) + minLength

	newPassword := make([]byte, length)
	randomData := make([]byte, length+(length/4))
	clen := byte(len(chars))
	maxrb := byte(256 - (256 % len(chars)))

	i := 0
	for {
		if _, err := io.ReadFull(crand.Reader, randomData); err != nil {
			panic(err)
		}
		for _, c := range randomData {
			if c >= maxrb {
				continue
			}
			newPassword[i] = chars[c%clen]
			i++
			if i == length {
				return string(newPassword)
			}
		}
	}
}

func main() {
	rand.Seed(time.Now().Unix())

	fmt.Print("Please, inform the minimum length: ")
	var minLength int
	fmt.Scanf("%d", &minLength)

	fmt.Print("Please, inform the maximum length: ")
	var maxLength int
	fmt.Scanf("%d", &maxLength)

	//minLength := 5
	//maxLength := 8

	fmt.Printf("This is the password generated by this program in Go: %v\n", generatePassword(minLength, maxLength))
}
